@model CampusManagement.Models.SF_GetStudentFines_Result
@using CampusManagement.Models
@using (Html.BeginForm("Create", "StudentFines", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    ModelCMSContainer dbCMS = new ModelCMSContainer();
    int StudentID = 0;
    if (ViewBag.StudentID != null)
    {
        StudentID = ViewBag.StudentID;
    }

    <div class="row">
        <h2><span class="col-sm-12">Add Student Fine</span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    Student st = dbCMS.Students.FirstOrDefault(a => a.StudentID == StudentID);
    if (st != null)
    {
        <label>Student Name</label>
            <span>@st.FirstName @st.LastName</span>
            <label>Email</label>
            <span>@st.Email</span>
            <label>CNIC</label>
            <span>@st.ACNIC</span>
            <label>Cell #</label>
            <span>@st.CellNo</span>
            <input id="BatchProgramID" name="BatchProgramID" value="@st.BatchProgramID" class="form-control" type="hidden" />
            <input id="StudentID" name="StudentID" value="@ViewBag.StudentID" class="form-control" type="hidden" />
            <input id="YearSemesterNo" name="YearSemesterNo" value="@st.CurrentSemesterNo" class="form-control" type="hidden" />
    }
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")

    <div class="row">
        <div class="col-sm-3">
            @Html.LabelFor(model => model.StudentFineTypeID, "Fine", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("StudentFineTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StudentFineTypeID, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-3">
            <input type="submit" value="Add" class="btn btn-primary" />
            <a href="@Url.Content("~/StudentFines/Index/")@ViewBag.StudentID" class="btn btn-primary">Refresh</a>
        </div>
    </div>
}
