@model CampusManagement.Models.GetApplicantListForAttendance_Result
@*@model CampusManagement.Models.GetAlumni_ResultsViewModel*@
@using CampusManagement.Models
@{
    ViewBag.Title = "Applicant List For Attendance";
    ////Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<div class="row">
    <h2><span class="col-sm-12">@ViewBag.Title</span></h2>
</div>

<hr style="border-top: 1px solid #6d9b90;" />

@using (Html.BeginForm("ApplicantListForAttendance", "Applicants", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("_MessageViewTempData")
    <div class="row">
        <div class="col-sm-3">
            <label>Session</label>
            @Html.DropDownListFor(model => model.BatchID, null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-sm-3">
            <label>Program</label>
            @Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-sm-3">
            <label>Type</label>
            @Html.DropDownList("DegreeID", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-sm-3">
            <label>Test/Interview</label>
            @Html.DropDownList("EntryTestID", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-sm-12" style="margin-top: 1.7em;">
            <button type="submit" class="btn btn-primary" value="Search">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>
    </div>
}

@using (Html.BeginForm("ApplicantListForAttendanceSave", "Applicants", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    int BatchID = (ViewBag.hdnBatchID == null) ? 0 : ViewBag.hdnBatchID;
    int BatchProgramID = (ViewBag.hdnBatchProgramID == null) ? 0 : ViewBag.hdnBatchProgramID;
    int DegreeID = (ViewBag.hdnDegreeID == null) ? 0 : ViewBag.hdnDegreeID;
    if(DegreeID == 0)
    {
        DegreeID = 21;
    }
    int EntryTestID = (ViewBag.hdnEntryTestID == null) ? 0 : ViewBag.hdnEntryTestID;
    <input id="hdnBatchID" name="hdnBatchID" value="@BatchID" class="form-control" type="hidden" />
    <input id="hdnBatchProgramID" name="hdnBatchProgramID" value="@BatchProgramID" class="form-control" type="hidden" />
    <input id="hdnDegreeID" name="hdnDegreeID" value="@DegreeID" class="form-control" type="hidden" />
    <input id="hdnEntryTestID" name="hdnEntryTestID" value="@EntryTestID" class="form-control" type="hidden" />
    List<GetApplicantListForAttendance_Result> lstApp = dbc.GetApplicantListForAttendance(BatchID, BatchProgramID, DegreeID, 0).ToList();
    <input id="hdnCount" name="hdnCount" value="@lstApp.Count" class="form-control" type="hidden" />
    int i = 1;
    if (lstApp.Count > 0)
    {
        <table class="table">

            <tr>
                <th>
                    Form #
                </th>
                <th>
                    Applicant Name
                </th>
                <th>
                    Father Name
                </th>
                <th>
                    Present/Absent
                </th>
            </tr>


            @foreach (var item in lstApp)
            {
                string FormNo = string.Concat("FormNo_", i);
                string FirstName = string.Concat("FirstName_", i);
                string FatherName = string.Concat("FatherName_", i);
                string PresentAbsent = string.Concat("PresentAbsent_", i);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FormNo)
                        <input id="@FormNo" name="@FormNo" value="@item.FormNo" class="form-control" type="hidden" />
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.FatherName)
                    </td>
                    <td>
                        <select id="@PresentAbsent" name="@PresentAbsent" class="form-control">
                            <option value="1">Present</option>
                            <option value="0">Absent</option>
                        </select>
                    </td>
                </tr>
                i++;
            }

        </table>

        <div class="row">
            <div class="col-sm-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            GetPrograms_by_FacultyLevelBatch();

            $("#DegreeID").val("22");
            var hdnDegreeID = "@ViewBag.hdnDegreeID";
            if (hdnDegreeID != "0" && hdnDegreeID != null) {
                $("#DegreeID").val(@ViewBag.hdnDegreeID);
            }
            GetEntryTestsByDegreeID();

            var hdnEntryTestID = "@ViewBag.hdnEntryTestID";
            if (hdnEntryTestID != "0" && hdnEntryTestID != null) {
                $("#EntryTestID").val(@ViewBag.hdnEntryTestID);
            }

            var hdnBatchProgramID = "@ViewBag.hdnBatchProgramID";
            if (hdnBatchProgramID != "0" && hdnBatchProgramID != null) {
                $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
            }

            $("#BatchID").change(function () {
                GetPrograms_by_FacultyLevelBatch();
            });

            $("#DegreeID").change(function () {
                GetEntryTestsByDegreeID();
            });
        });

        function GetPrograms_by_FacultyLevelBatch() {
            var BatchID = $("#BatchID").val();
            $.ajax({
                url: "@Url.Content("~/Applicants/GetPrograms_by_FacultyLevelBatch")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchID: +BatchID }),
                success: function (result) {
                    $("#BatchProgramID").html("");
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#BatchProgramID").append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetEntryTestsByDegreeID() {
            var DegreeID = $("#DegreeID").val();
            $.ajax({
                url: "@Url.Content("~/Applicants/GetEntryTestsByDegreeID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ DegreeID: +DegreeID }),
                success: function (result) {
                    $("#EntryTestID").html("");
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#EntryTestID").append($('<option></option>').val(sem.EntryTestID).html(sem.EntryTestName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

    </script>pt>
}