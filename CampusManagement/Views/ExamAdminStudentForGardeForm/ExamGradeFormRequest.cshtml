@model CampusManagement.Models.ExamGardeFormDeatilViewModel
@using CampusManagement.Models


<div class="row">
    <h2><span class="col-sm-12">Grade From Request Page</span></h2>
</div>
<hr style="border-top: 1px solid #6d9b90;" />
@Html.Partial("_MessageView")

@*<table style="width:100%">
    <tr style="width:100%">
        <td style="width:100%; text-align:right">
            <input id="btnPrintForm" type="submit" class="btn btn-primary" value="Print" onclick="@(" PrintForm()")" />
        </td>
    </tr>
</table>*@
@using (Html.BeginForm("ExamGradeFormRequestiInsertOrUpdate", "ExamAdminStudentForGardeForm", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



<div id="divPrintRequestFrom" name="divPrintRequestFrom" style="text-align:center">
    <div id="divPrintForm" name="divPrintForm" style="background-color:lightyellow;">
        <div style="page-break-before: always; border:solid;border-width:2px;border-color:lightgray;">

            <div style="font-size:30px;font-weight:bold;margin-top:30px">
                @MvcApplication.UniversityName
            </div>
            <div style="font-size:15px;font-weight:bold">
                @MvcApplication.UniversityCampusName
            </div>
            <div style="font-size:15px">
                @MvcApplication.CampusAddress
            </div>
            <table style="width:100%;margin-top:20px;">
                <tr style="width:100%">
                    <td style="width:35%"></td>
                    <td style="font-size: 20px;width: 30%;font-weight: bold;background-color: #c1c1c159"> <span style="color:#000000 !important">Change Grade Form</span> </td>
                    <td style="width:35%"></td>
                </tr>
            </table>
            @*style="text-align:right"*@
            <div style="width:100%" class="col-sm-12">
                <div style="width:50%;" class="pull-left">

                </div>
                <div style="width:50%" class="pull-right">
                    <div class="row">

                        <div class="col-sm-5">

                        </div>
                        <div class="col-sm-1" style="padding-top:10px">
                            <label>Date:</label>

                        </div>
                        <div class="col-sm-4">
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.ExamStudentSubjectChangeGradeFormID)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.ExamID)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.ProgramCourseID)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.StudentID)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.ExamStudentSubjectMarkID)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.TeacherName)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.IsTeacherApproveOrDisapprove)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.TeacherApproveOrDisapproveDate)
                            @Html.HiddenFor(model => model.ExamGardeFormDeatilByStudentIDObj.CreatedBy)
                            @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.CreatedOn, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                        </div>
                        <div class="col-sm-2">


                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Course:</label>
                </div>
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.StudentSubjectDeatilForGardeFormObj.ExamSubjectTitle, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1">

                </div>

            </div>

            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Student Name:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.StudentSubjectDeatilForGardeFormObj.StudentName, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Registration #:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.StudentSubjectDeatilForGardeFormObj.RegistrationNo, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1">

                </div>
            </div>
            @if (Model.ExamGardeFormDeatilByStudentIDObj.ExamStudentSubjectChangeGradeFormID == 0)
            {

            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Old Marks:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.ObtainOldMarks, new { htmlAttributes = new { @onkeyup = "DecimalValidate(1);", @class = "" } })
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-2" style="padding-top:10px">
                    <label>New Marks:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.ObtainNewMarks, new { htmlAttributes = new { @onkeyup = "DecimalValidate(1);", @class = "" } })
                </div>
                <div class="col-sm-1">

                </div>
            </div>
            }
            else
            {
            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Old Marks:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.ObtainOldMarks, new { htmlAttributes = new { @onkeyup = "DecimalValidate(1);", @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1">

                </div>
                <div class="col-sm-2" style="padding-top:10px">
                    <label>New Marks:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.ObtainNewMarks, new { htmlAttributes = new { @onkeyup = "DecimalValidate(1);", @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1">

                </div>
            </div>
            }
            @if (Model.ExamGardeFormDeatilByStudentIDObj.ExamStudentSubjectChangeGradeFormID == 0)
            {
            <div class="row" style="margin-top:40px; margin-bottom:40px">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Reason:</label>
                </div>
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.ExamGardeFormDeatilByStudentIDObj.Reason, new { @class = "notes", @style = " width: 100%;  background-color: lightyellow; ", @rows = "4" })
                </div>
                <div class="col-sm-1">

                </div>

            </div>
            }
            else
            {
            <div class="row" style="margin-top:40px; margin-bottom:40px">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Reason:</label>
                </div>
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.ExamGardeFormDeatilByStudentIDObj.Reason, new { @class = "notes", @style = " width: 100%;  background-color: lightyellow; ", @rows = "4", @readonly = "readonly" })
                </div>
                <div class="col-sm-1">

                </div>

            </div>
            }


            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Instructor(Signature):</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.TeacherName, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>
                <div class="col-sm-1" style="padding-top:10px; text-align:left">
                    @Html.CheckBoxFor(model => model.ExamGardeFormDeatilByStudentIDObj.IsTeacherApproveOrDisapprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px", @disabled = "disabled" })
                    @*@Html.CheckBoxFor(Model => Model.ExamGardeFormDeatilByStudentIDObj.IsTeacherApproveOrDisapprove, new { onclick = string.Format("StudentGradForm({0},{1},{2},{3})", Model.ExamGardeFormDeatilByStudentIDObj.ExamStudentSubjectChangeGradeFormID), @class = "checkbox-inline", @style = "width:20px;height:20px", @id = cbId })*@
                </div>
                <div class="col-sm-1" style="padding-top:10px">
                    <label>Date:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.TeacherApproveOrDisapproveDate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>

            </div>

          

           
            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Head Of Deptt(Signature):</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.HodName, new { htmlAttributes = new { @onkeyup = "DecimalValidate(1);", @class = "" } })
                </div>
                <div class="col-sm-1" style="padding-top:10px; text-align:left">
                    @Html.CheckBoxFor(model => model.ExamGardeFormDeatilByStudentIDObj.IsHodApproveOrDisapprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px"})
                </div>
                <div class="col-sm-1" style="padding-top:10px">
                    <label>Date:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.HodApproveOrDisapproveDate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>

            </div>
          

            
           
            <div class="row">
                <div class="col-sm-2" style="padding-top:10px">
                    <label>Dean(Signature):</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.DeanName, new { htmlAttributes = new { @class = ""} })
                </div>
                <div class="col-sm-1" style="padding-top:10px; text-align:left">
                    @Html.CheckBoxFor(model => model.ExamGardeFormDeatilByStudentIDObj.IsDeanApproveOrDisapprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px" })
                </div>
                <div class="col-sm-1" style="padding-top:10px">
                    <label>Date:</label>
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.ExamGardeFormDeatilByStudentIDObj.DeanApproveOrDisapproveDate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                </div>
            </div>

          




            <br />
            <br />
            <br />

            <div class="row">
                <div class="col-sm-12"></div>
            </div>
        </div>
    </div>
</div>
<br />
    
<div class="row">
    <div class="col-sm-4"></div>
    <div class="col-sm-7"></div>
    <div class="col-sm-1">
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
</div>
   

}


<script>
    $(document).ready(function () {s
        // $("#TotalSubjectMarks").val("");
    });

    function DecimalValidate(myvalue) {
        var CurrentControle = $('.TotalMarks');
        if (myvalue == 1) {
            CurrentControle = $('.TotalMarks');
        } else if (myvalue == 2) {
            CurrentControle = $('.ObtainMarks');
        }
        if ($.isNumeric(CurrentControle.val())) {
            var currentvalue = CurrentControle.val() + "";
            var currentarrayvalue = currentvalue.split('.');
            if (currentarrayvalue[1].length > 4) {
                var currentvalueReplace = currentvalue.substring(0, currentvalue.length - 1)
                CurrentControle.val(currentvalueReplace);
            }

        } else {
            var currentvalue = CurrentControle.val() + "";
            var currentvalueReplace = currentvalue.substring(0, currentvalue.length - 1)
            CurrentControle.val(currentvalueReplace);
        }

    }


    function PrintForm() {
        
        var data = document.getElementById('divPrintForm').innerHTML;
        Popup(data);
    }

    function Popup(data) {
        var mywindow = window.open('', 'mydiv', 'height=550,width=750');
        mywindow.document.write('<html><head><title></title>');
        mywindow.document.write('<link rel="stylesheet" href="~/Content/Site.css" type="text/css" media="print" />');
        mywindow.document.write('</head><body >');
        mywindow.document.write(data);
        mywindow.document.write('</body></html>');

        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10

        mywindow.print();
        mywindow.close();

        return true;
    }


</script>
<style>
    input[type=text] {
        width: 100%;
        background-color: lightyellow;
        border: 0;
        border-bottom: 1px solid lightgrey;
        padding: 3px;
    }

    input[type=datetime] {
        width: 100%;
        background-color: lightyellow;
        border: 0;
        border-bottom: 1px solid lightgrey;
        padding: 3px;
    }


    input[type=textarea] {
        width: 100%;
        background-color: lightyellow;
        border: 0;
        border-bottom: 1px solid lightgrey;
        padding: 3px;
    }


    .notes {
        background-image: -webkit-linear-gradient(left, lightyellow 10px, transparent 10px), -webkit-linear-gradient(right, lightyellow 10px, transparent 10px), -webkit-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
        background-image: -moz-linear-gradient(left, lightyellow 10px, transparent 10px), -moz-linear-gradient(right, lightyellow 10px, transparent 10px), -moz-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
        background-image: -ms-linear-gradient(left, lightyellow 10px, transparent 10px), -ms-linear-gradient(right, lightyellow 10px, transparent 10px), -ms-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
        background-image: -o-linear-gradient(left, lightyellow 10px, transparent 10px), -o-linear-gradient(right, lightyellow 10px, transparent 10px), -o-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
        background-image: linear-gradient(left, lightyellow 10px, transparent 10px), linear-gradient(right, lightyellow 10px, transparent 10px), linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
        background-size: 100% 100%, 100% 100%, 100% 31px;
        background-color: lightyellow;
        border: none;
        border-bottom: 1px solid lightgrey;
        line-height: 31px;
        font-family: Arial, Helvetica, Sans-serif;
        padding: 8px;
    }

        .notes:focus {
            outline: none;
        }

    body {
        background-color: #eee;
    }
</style>
