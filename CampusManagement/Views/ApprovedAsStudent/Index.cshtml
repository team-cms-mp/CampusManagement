@model CampusManagement.Models.ApproveStudentViewModel
@using PagedList.Mvc;
@using CampusManagement.Models
@{
    ViewBag.Title = "Approve Students";
    //Layout = "~/Views/Shared/_MyLayout.cshtml";
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
}


<div class="row">
    <h2><span class="col-sm-12">@ViewBag.Title</span></h2>
</div>

<hr style="border-top: 1px solid #6d9b90;" />

<fieldset class="box-border">
    <legend class="box-border">Search</legend>
    <div class="control-group">
        @Html.Partial("_MessageView")
        @using (Html.BeginForm("Index", "ApprovedAsStudent", FormMethod.Post))
        {
            <div class="row" style="margin-top: -4em;margin-bottom: -2em;">

                <div class="col-sm-3">
                    <label>Session</label>
                    @Html.DropDownList("BatchID", null, htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-sm-3">
                    <label>Program</label>
                    @Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control" })

                </div>

                <div class="col-sm-3">
                    <label>Semester #</label>
                    @Html.DropDownList("YearSemesterNo", null, htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-sm-1 " style="margin-top:25px;">
                    <button type="submit" class="btn btn-primary" value="Search">
                        <span class="glyphicon glyphicon-search"></span> Search
                    </button>
                </div>
            </div>
        }
        <br />
    </div>
</fieldset>


<fieldset class="boxpanel-border">
    <legend class="boxpanel-border">Approve Student Section</legend>
    <div class="control-group">

        @using (Html.BeginForm("SaveApproveStudents", "ApprovedAsStudent", FormMethod.Post))
        {
            
            <div class="row" style="margin-top:-95px">
                <div class="col-sm-2 pull-right" style="text-align:right">
                    (<label class="control-label" style="font-size:medium">&nbsp;&nbsp;Select ALL&nbsp;&nbsp;</label>)
                    @Html.CheckBox("cbSelectAll", new { @class = "checkbox-inline", @style = "width:20px;height:20px;;margin-left:5px" })
                </div>
            </div>

            <div class="row" style="margin-top:20px">
                <div class="col-sm-1 pull-right">
                    <button type="submit" class="btn btn-primary" value="Save">
                        <span class="glyphicon glyphicon-search"></span> Save
                    </button>
                </div>
            </div>
           
                
                <br />
                <input id='BatchID' name='BatchID' type="hidden" value='@ViewBag.hdnBatchID' />
                <input id='BatchProgramID' name='BatchProgramID' type="hidden" value='@ViewBag.hdnBatchProgramID' />
                <input id='YearSemesterNo' name='YearSemesterNo' type="hidden" value='@ViewBag.hdnYearSemesterNo' />

                <table class="table" id="tblEligiblestudents" name="tblEligiblestudents">
                    <tr>
                        <th>Student Info</th>
                        <th>Program Details</th>
                        <th>Is Approved</th>
                    </tr>
                    @for (int i = 0; i < Model.StudentList.Count; i++)
                {


                @Html.HiddenFor(model => Model.StudentList[i].StudentID)
                @Html.HiddenFor(model => Model.StudentList[i].AddAppID)
                @Html.HiddenFor(model => Model.StudentList[i].BatchName)
                @Html.HiddenFor(model => Model.StudentList[i].CellNo)
                @Html.HiddenFor(model => Model.StudentList[i].CurrentSemesterNo)
                @Html.HiddenFor(model => Model.StudentList[i].Email)
                @Html.HiddenFor(model => Model.StudentList[i].FatherName)
                @Html.HiddenFor(model => Model.StudentList[i].FormNo)
                @Html.HiddenFor(model => Model.StudentList[i].Password)
                @Html.HiddenFor(model => Model.StudentList[i].ProgramName)
                @Html.HiddenFor(model => Model.StudentList[i].RegistrationNo)
                @Html.HiddenFor(model => Model.StudentList[i].RollNumber)
                @Html.HiddenFor(model => Model.StudentList[i].StatusID)
                @Html.HiddenFor(model => Model.StudentList[i].StatusName)
                @Html.HiddenFor(model => Model.StudentList[i].studentname)
                @Html.HiddenFor(model => Model.StudentList[i].UserName)

                    string TDEligibleID = "DivEligibleID_" + @Model.StudentList[i].StudentID;

                <tr>
                    <td>

                        <span style="font-weight:bold"> Name: </span>@Html.DisplayFor(modelItem => Model.StudentList[i].studentname)
                        <span style="font-weight:bold"> Father Name: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].FatherName)
                        <span style="font-weight:bold"> Form #: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].FormNo) <br />
                        <span style="font-weight:bold"> Registration #: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].RegistrationNo)
                        <span style="font-weight:bold"> RollNumber #: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].RollNumber)  <br />
                        <span style="font-weight:bold"> Email : </span> @Html.DisplayFor(modelItem => Model.StudentList[i].Email)
                        <span style="font-weight:bold"> Cell #: </span>@Html.DisplayFor(modelItem => Model.StudentList[i].CellNo)
                        <span style="font-weight:bold"> Status: </span> <span style="font-weight:bold; color:red">( @Html.DisplayFor(modelItem => Model.StudentList[i].StatusName) ) </span>

                    </td>
                    <td>
                        <span style="font-weight:bold"> Session: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].BatchName) <span style="font-weight:bold">  Semester: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].CurrentSemesterNo) <br />
                        <span style="font-weight:bold"> Program: </span> @Html.DisplayFor(modelItem => Model.StudentList[i].ProgramName)
                    </td>
                    <td id="@TDEligibleID">
                        @Html.CheckBoxFor(Model => Model.StudentList[i].IsApproved, new { @class = "checkbox-inline", @style = "width:20px;height:20px", })
                    </td>

                </tr>
                }

                </table>

                <br />
                <div class="col-sm-1 pull-right">
                    <button type="submit" class="btn btn-primary" value="Save">
                        <span class="glyphicon glyphicon-search"></span> Save
                    </button>
                </div>
                <br />
                }
            </div>
</fieldset>


@section Scripts {
    <script>

                $(document).ready(function () {
                    $("#pageSize").val("@ViewBag.pageSize");
                    $('input[name="daterange"]').daterangepicker({
                        opens: 'left'
                    }, function (start, end, label) {
                        console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
                    });

                    GetPrograms_by_FacultyLevelBatch();
                    // $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
                    GetBatchProgramSemesterList();
                    // $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);

                    $("#BatchID").change(function () {
                        GetPrograms_by_FacultyLevelBatch();
                        // $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
                        GetBatchProgramSemesterList();
                        // $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);

                    });

                    $("#BatchProgramID").change(function () {
                        GetBatchProgramSemesterList();
                        // $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);

                    });

                    //$("#cbSelectAll").change(function () {

                    //    var selectedValue = $("#cbSelectAll").val();
                    //    alert(selectedValue + "");
                    //    if (selectedValue == "Unselect") {
                    //        $("table tr :checkbox:lt(1000)").prop("checked", false);
                    //    }

                    //    $("table tr :checkbox:lt(1000)").prop("checked", false);

                    //    if (selectedValue == "Select") {
                    //        $("table tr :checkbox:lt(1000)").prop("checked", true);
                    //    }

                    //    else {
                    //        $("table tr :checkbox:lt('" + selectedValue + "')").prop("checked", true);
                    //    }

                    //});



                    $('#cbSelectAll').click(function () {
                        
                        if ($('#cbSelectAll').is(':checked')) {
                            $('#tblEligiblestudents td').each(function () {
                                var cellText = $(this).html();
                                var cellid = $(this).attr('id');
                                var FindId = "#" + cellid;
                                $(FindId).children('input[type=checkbox]').each(function () {
                                    var cbId = $(this).attr('id');
                                    var cbidhash = "#" + cbId
                                    $(cbidhash).attr('checked', true);
                                })


                            });
                        } else {
                            $('#cbSelectAll').attr('checked', false);
                            $('#tblEligiblestudents td').each(function () {
                                var cellText = $(this).html();
                                var cellid = $(this).attr('id');
                                var FindId = "#" + cellid;
                                $(FindId).children('input[type=checkbox]').each(function () {
                                    var cbId = $(this).attr('id');
                                    var cbidhash = "#" + cbId
                                    $(cbidhash).attr('checked', false);
                                    // $(cbidhash).removeAttr('checked',true);
                                })
                            });

                        }

                    })

                });

                function GetPrograms_by_FacultyLevelBatch() {
                    var BatchID = $("#BatchID").val();
                    $.ajax({
                        url: "@Url.Content("~/ExamEligibleStudentForAdmin/GetPrograms_by_FacultyLevelBatch")",
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify({ BatchID: +BatchID }),
                        success: function (result) {
                            $("#BatchProgramID").html("");
                            // $("#BatchProgramID").append($('<option></option>').val("0").html("--Please Select--"));
                            $.each($.parseJSON(result), function (i, sem) {
                                $("#BatchProgramID").append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                            });
                            $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID)
                        },
                        error: function (ex) {
                            alert(ex.error);
                        },
                    });
                }

                function GetBatchProgramSemesterList() {
                    var BatchProgramID = $("#BatchProgramID").val();
                    $.ajax({
                        url: "@Url.Content("~/ExamEligibleStudentForAdmin/GetBatchProgramSemesterList")",
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify({ BatchProgramID: +BatchProgramID }),
                        success: function (result) {
                            $("#YearSemesterNo").html("");
                            $("#YearSemesterNo").append($('<option></option>').val("0").html("--ALL--"));
                            $.each($.parseJSON(result), function (i, sem) {
                                $("#YearSemesterNo").append($('<option></option>').val(sem.YearSemesterNo).html(sem.YearSemesterNo));
                            });
                            $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo)
                        },
                        error: function (ex) {
                            alert(ex.error);
                        },
                    });
                }




                @*$(function () {
        $("#pageSize").val("@ViewBag.pageSize");
        $('input[name="daterange"]').daterangepicker({
            opens: 'left'
        }, function (start, end, label) {
            console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
        });
    });*@



                function redirect(dropDownValue) {
                    window.location.href = '/Applicants/Index?page = 1&pageSize=' + dropDownValue;
                }
    </script>
    <style>
        fieldset.box-border {
            border: 1px groove #ddd !important;
            padding: 0 1.4em 0 1.4em !important;
            margin: 0 0 1.5em 0 !important;
            -webkit-box-shadow: 0px 0px 0px 0px #000;
            box-shadow: 0px 0px 0px 0px #000;
        }

        legend.box-border {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
        }

        fieldset.boxpanel-border {
            border: 1px groove #ddd !important;
            padding: 0 1.4em 0 1.4em !important;
            margin: 0 0 1.5em 0 !important;
            -webkit-box-shadow: 0px 0px 0px 0px #000;
            box-shadow: 0px 0px 0px 0px #000;
        }

        legend.boxpanel-border {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
        }
    </style>

}




