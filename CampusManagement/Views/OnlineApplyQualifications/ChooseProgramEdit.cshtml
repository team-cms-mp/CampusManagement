@model CampusManagement.Models.ApplicantQualification
@using CampusManagement.Models
@Html.Partial("_AdmissionTabsView")
<div class="row">
    <h2><span class="col-sm-12">Choose Program</span></h2>
</div>
<hr style="border-top: 1px solid #6d9b90;" />
@using (Html.BeginForm("Create", "OnlineApplyQualifications", new { FormNo = ViewBag.FormNo, SubmitType = "AddProgram" }, FormMethod.Post, new { enctype = "multipart/form-data", @style = "margin-bottom:10px" }))
{
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    List<ApplyForProgram> Ap = dbc.ApplyForPrograms.ToList();
    string FormNo = ViewBag.FormNo;
    GetApplicantLevel_Result Al = dbc.GetApplicantLevel(FormNo).FirstOrDefault();
    Applicant ApplicantObj = new Applicant();
    ApplicantObj = dbc.Applicants.FirstOrDefault(x => x.FormNo == FormNo);
    
    @Html.AntiForgeryToken()

    <div class="divHeading">
        <a data-toggle="collapse" data-target="#hide10"><h4 class="fa fa-level-down" aria-hidden="true">  Applicant Status </h4></a>
    </div>
    <div div class="row" id="hide10">
        <ul>
            <li class="col-sm-3 custom-control custom-checkbox">

                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "Fresh Applicant")
                    {
                        <input type="checkbox" class="custom-control-input remove" id="FreshApplicant" value="Fresh Applicant" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="FreshApplicant" value="Fresh Applicant" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="FreshApplicant" value="Fresh Applicant" name="ApplicantStatus">
                }



                <label class="custom-control-label" for="FreshApplicant">Fresh Applicant</label>
            </li>

            <li class="col-sm-3  custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "Transfer Applicant")
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferApplicant" value="Transfer Applicant" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferApplicant" value="Transfer Applicant" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="TransferApplicant" value="Transfer Applicant" name="ApplicantStatus">
                }

                <label class="custom-control-label" for="TransferApplicant">Transfer Applicant</label>
            </li>

            <li class="col-sm-3  custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "RESULT AWAITED")
                    {
                        <input type="checkbox" class="custom-control-input remove" id="ResultAwaitingApplicant" value="RESULT AWAITED" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="ResultAwaitingApplicant" value="RESULT AWAITED" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="ResultAwaitingApplicant" value="RESULT AWAITED" name="ApplicantStatus">
                }


                <label class="custom-control-label" for="ResultAwaitingApplicant">Result Awaiting Applicant</label>
            </li>

            <li class="col-sm-3 custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {

                    if (ApplicantObj.ApplicantStatus.ToUpper() == string.Concat(MvcApplication.CampusName, " Graduate").ToUpper())
                    {
                        <input type="checkbox" class="custom-control-input remove" id="IqraGraduate" value="Iqra Graduate" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="IqraGraduate" value="Iqra Graduate" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="IqraGraduate" value="Iqra Graduate" name="ApplicantStatus">
                }
                <label class="custom-control-label" for="IqraGraduate">@MvcApplication.CampusName Graduate</label>
            </li>

            <li class="col-sm-3  custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "Foreigner")
                    {
                        <input type="checkbox" class="custom-control-input remove" id="Foreigner" value="Foreigner" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="Foreigner" value="Foreigner" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="Foreigner" value="Foreigner" name="ApplicantStatus">
                }
                <label class="custom-control-label" for="Foreigner">Foreigner</label>
            </li>

            <li class="col-sm-3  custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "Transfer From " + MvcApplication.CampusName)
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferFromIqra" value="Transfer From @MvcApplication.CampusName" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferFromIqra" value="Transfer From @MvcApplication.CampusName" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="TransferFromIqra" value="Transfer From @MvcApplication.CampusName" name="ApplicantStatus">
                }

                <label class="custom-control-label" for="TransferFromIqra">Transfer From @MvcApplication.CampusName</label>
            </li>

            @*<li class="col-sm-3  custom-control custom-checkbox">
                @if (ApplicantObj != null)
                {
                    if (ApplicantObj.ApplicantStatus == "Transfer From Other Uni")
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferFromOtherUni" value="Transfer From Other Uni" name="ApplicantStatus" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="custom-control-input remove" id="TransferFromOtherUni" value="Transfer From Other Uni" name="ApplicantStatus">
                    }
                }
                else
                {
                    <input type="checkbox" class="custom-control-input remove" id="TransferFromOtherUni" value="Transfer From Other Uni" name="ApplicantStatus">
                }

                <label class="custom-control-label" for="TransferFromOtherUni">Transfer From Other Uni</label>
            </li>*@


        </ul>
    </div>
    <div class="divHeading">
        <a data-toggle="collapse" data-target="#hide4"><h4 class="fa fa-level-down" aria-hidden="true"> Program Info </h4></a>
    </div>
    <div id="hide4">
        <div class="row">
            <div class="col-sm-6">

                @Html.LabelFor(model => model.LevelID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.LevelID, null, htmlAttributes: new { @class = "form-control", @value = Al.LevelID, disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.LevelID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">

                @Html.LabelFor(model => model.FacultyID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.FacultyID, null, htmlAttributes: new { @class = "form-control", disabled= "disabled" })
                @Html.ValidationMessageFor(model => model.FacultyID, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                @Html.LabelFor(model => model.BatchProgramID1, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.BatchProgramID1, null, "--Please Select--", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.BatchProgramID1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.FacultyID1, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.FacultyID1, null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.FacultyID1, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-6">
                @Html.LabelFor(model => model.BatchProgramID2, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.BatchProgramID2, null, "--Please Select--", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.BatchProgramID2, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                @Html.LabelFor(model => model.FacultyID2, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.FacultyID2, null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.FacultyID2, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                @Html.LabelFor(model => model.BatchProgramID3, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.BatchProgramID3, null, "--Please Select--", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.BatchProgramID3, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        
        <div class="row">
            <div class="col-sm-3">
                <a href="@Url.Content("~/OnlineApply/Index")" class="btn btn-primary">Back</a>
            </div>
        </div>
    </div>
            }

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#tab2").css("background", "#eee");
            $('input.remove').on('change', function () {
                $('input.remove').not(this).prop('checked', false);
            });
            GetSelectedPrograms("dept", "#BatchProgramID1");
            var FacultyID = $("#FacultyID").val();
            var BatchID = "0";
            GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID1");
            GetSelectedPrograms("dept", "#BatchProgramID2");
            FacultyID = $("#FacultyID1").val();
            GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID2");
            GetSelectedPrograms("dept", "#BatchProgramID3");
            FacultyID = $("#FacultyID2").val();
            GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID3");
            $("#FacultyID").change(function () {
                FacultyID = $("#FacultyID").val();
                GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID1");
            });
            $("#FacultyID1").change(function () {
                FacultyID = $("#FacultyID1").val();
                GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID2");
            });
            $("#FacultyID2").change(function () {
                FacultyID = $("#FacultyID2").val();
                GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, "#BatchProgramID3");
            });
            $("#BatchID").change(function () {
                GetPrograms_by_FacultyLevelBatch();
            });
        });

        function GetPrograms_by_FacultyLevelBatch(FacultyID, BatchID, DropDownID) {
            $.ajax({
                url: "@Url.Content("~/OnlineApplyQualifications/GetPrograms_by_FacultyLevelBatch")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ FacultyID: +FacultyID, BatchID: + BatchID }),
                success: function (result) {

                    $(DropDownID).html("");
                    $(DropDownID).append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $(DropDownID).append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                    });

                    GetSelectedPrograms("prog", DropDownID);
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetSelectedPrograms(text, DropDownID) {
            $.ajax({
                url: "@Url.Content("~/OnlineApplyQualifications/GetSelectedPrograms")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                success: function (result) {
                    $.each($.parseJSON(result), function (i, prog) {

                        if (text == "dept")
                        {
                            if (DropDownID == "#BatchProgramID1") {
                                if (prog.ProgramPriority == 1) {
                                    $("#FacultyID").val(prog.FacultyID);
                                }
                            }
                            else if (DropDownID == "#BatchProgramID2") {
                                if (prog.ProgramPriority == 2) {
                                    $("#FacultyID1").val(prog.FacultyID);
                                }
                            }
                            else if (DropDownID == "#BatchProgramID3") {
                                if (prog.ProgramPriority == 3) {
                                    $("#FacultyID2").val(prog.FacultyID);
                                }
                            }
                        }
                        else if (text == "prog") {
                            if (DropDownID == "#BatchProgramID1") {
                                if (prog.ProgramPriority == 1) {
                                    $("#BatchProgramID1").val(prog.BatchProgramID);
                                }
                            }
                            else if (DropDownID == "#BatchProgramID2") {
                                if (prog.ProgramPriority == 2) {
                                    $("#BatchProgramID2").val(prog.BatchProgramID);
                                }
                            }
                            else if (DropDownID == "#BatchProgramID3") {
                                if (prog.ProgramPriority == 3) {
                                    $("#BatchProgramID3").val(prog.BatchProgramID);
                                }
                            }
                        }
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

    </script>
}

