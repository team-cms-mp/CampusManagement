@model CampusManagement.Models.Applicant

@using CampusManagement.Models

    @using (Html.BeginForm("OrientationEmailSent", "SendEmails", FormMethod.Post, new { @style = "margin-top:0%" }))
    {
    @Html.AntiForgeryToken()
    <div class="row">
        <h2><span class="col-sm-12">Orientation Email Sent</span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")
    <div class="row">
        <div class="col-sm-5">
            <label>Session</label>
            @Html.DropDownListFor(model => model.BatchID, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchID, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-5">
            @Html.LabelFor(model => model.BatchProgramID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control", onchange = "changeHiddenInput(this)" })
            @Html.ValidationMessageFor(model => model.BatchProgramID, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-2" style="margin-top: 1.7em;">
            <button type="submit" class="btn btn-primary" value="Search">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>
    </div>
}

@using (Html.BeginForm("SendOrientationEmail", "SendEmails", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row" style="margin-top: -3em;">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="hdnBatchProgramID" id="hdnBatchProgramID" value="@ViewBag.hdnBatchProgramID" />
        <input type="hidden" name="hdnBatchID" id="hdnBatchID" value="@ViewBag.hdnBatchID" />
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4 text-success">
                @ViewBag.Status
            </div>
        </div>

    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    int BatchProgramID = (ViewBag.hdnBatchProgramID == null) ? 0 : ViewBag.hdnBatchProgramID;

    List<GetApplicantsForEntryTestEmail_Result> lstApp = dbc.GetApplicantsForEntryTestEmail(BatchProgramID, 5).ToList();
    <input id="hdnRowCount" name="hdnRowCount" value="@lstApp.Count" type="hidden" />
    int i = 1;
    if (lstApp.Count > 0)
    {
        <table class="table">
            <tr>
                <th>
                    Form #
                </th>
                <th>
                    Applicant Name
                </th>
                <th>
                    Father Name
                </th>
                <th>
                    Cell#
                </th>
                <th>
                    Email
                </th>
                <th>
                    Status
                </th>
            </tr>

            @foreach (var item in lstApp)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FormNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicantName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FatherName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CellNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusName)
                    </td>

                </tr>
                i++;
            }
        </table>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#BatchID").val(@ViewBag.hdnBatchID);
            GetPrograms_by_FacultyLevelBatch();
            $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
            $("#BatchID").change(function () {
                GetPrograms_by_FacultyLevelBatch();
                $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
            });

            $(".chkChecked").on("click", function () {
                var txtEmail, lastName, old;
                $("#ToEmail").prop("readonly", true);
                if ($(this).is(":checked")) {
                    txtEmail = $(this).closest('tr').find('input[name="txtEmail"]').val();
                    old = $("#ToEmail").val();
                    if (old == "") {
                        $("#ToEmail").val(txtEmail);
                    }
                    else {
                        $("#ToEmail").val(old + "," + txtEmail);
                    }
                }
                else {
                    txtEmail = $(this).closest('tr').find('input[name="txtEmail"]').val();
                    old = $("#ToEmail").val();
                    if (old != "") {
                        old = old.replace(txtEmail, "").replace(",", "");
                        $("#ToEmail").val(old);
                    }
                }
            });
        });

        function GetPrograms_by_FacultyLevelBatch() {
            var BatchID = $("#BatchID").val();
            $.ajax({
                url: "@Url.Content("~/SendEmails/GetPrograms_by_FacultyLevelBatch")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchID: +BatchID }),
                success: function (result) {
                    $("#BatchProgramID").html("");
                    $("#BatchProgramID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#BatchProgramID").append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }


    </script>
}
