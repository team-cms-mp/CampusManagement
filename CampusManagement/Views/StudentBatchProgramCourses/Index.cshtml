@model CampusManagement.Models.StudentBatchProgramCourse
@using CampusManagement.Models
@{
    ViewBag.Title = "Student Course";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

@{ 
    int bpID = ViewBag.hdnBatchProgramID;
    int ysNo = ViewBag.hdnYearSemesterNo;
    int StudentID = 0;
    if (ViewBag.StudentID != null)
    {
        StudentID = ViewBag.StudentID;
    }
}

@using (Html.BeginForm("Index", "StudentBatchProgramCourses", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    ModelCMSContainer dbCMS = new ModelCMSContainer();
    <div class="row">
        <h2><span class="col-sm-12">Student Course</span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")

    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.BatchProgramID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchProgramID, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-3">
            @Html.LabelFor(model => model.YearSemesterNo, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("YearSemesterNo", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.YearSemesterNo, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-9">
            <label for="searchValue" class="control-label">Student Search</label>
            <input id="searchValue" class="form-control" />
            <input id="StudentID" name="StudentID" class="form-control" type="hidden" />
        </div>
    </div>
        if(StudentID > 0)
        { 
        <br />
        <div class="row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.BatchProgramID, htmlAttributes: new { @class = "control-label" })
                <label >Student ID</label>
                @Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BatchProgramID, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                @Html.LabelFor(model => model.YearSemesterNo, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("YearSemesterNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YearSemesterNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-9">
                <label for="searchValue" class="control-label">Student Search</label>
                <input id="searchValue" class="form-control" />
                <input id="StudentID" name="StudentID" class="form-control" type="hidden" />
            </div>
        </div>
        }
    <br />
    <div class="row">
        <div class="col-sm-5">
            <input type="submit" value="Search" class="btn btn-success" />
            <a href="@Url.Content("~/StudentBatchProgramCourses/Index")" class="btn btn-success">Refresh</a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-6">
            <h4><span class="control-label">All Courses</span></h4>
            <table class="table">
                <tr>
                    <th>Course</th>
                    <th>Action</th>
                </tr>
                @{
                    foreach (var item in dbCMS.BatchProgramCourses.Where(bpc => bpc.BatchProgramID == bpID && bpc.YearSemesterNo == ysNo).ToList())
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Course.CourseName)
                            </td>
                            <td>
                                @Html.ActionLink("Assign", "Assign", new { id = item.ProgramCourseID, sID = StudentID })
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
        <div class="col-sm-6">
            <h4><span class="control-label">Avail Courses</span></h4>
            <table class="table">
                <tr>
                    <th>Course</th>
                    <th>Action</th>
                </tr>
                @{
                    List<StudentBatchProgramCourse> lstSBP = new List<StudentBatchProgramCourse>();
                    if(StudentID > 0)
                    {
                        lstSBP = dbCMS.StudentBatchProgramCourses.Where(bpc => bpc.BatchProgramID == bpID && bpc.YearSemesterNo == ysNo && bpc.StudentID == StudentID).ToList();
                    }
                    else
                    {
                        lstSBP = dbCMS.StudentBatchProgramCourses.Where(bpc => bpc.BatchProgramID == bpID && bpc.YearSemesterNo == ysNo).ToList();
                    }

                    foreach (var item in lstSBP)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Course.CourseName)
                            </td>
                            <td>
                                @Html.ActionLink("Unassign", "Unassign", new { id = item.StudentBatchProgramCourseID, sID = StudentID })
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
}

<input type="hidden" name="hdnBatchProgramID" value="@ViewBag.hdnBatchProgramID" />
<input type="hidden" name="hdnYearSemesterNo" value="@ViewBag.hdnYearSemesterNo" />

@section Scripts {
<script>
        $(document).ready(function () {
            GetBatchProgramSemesterList();
            GetStudentsList();
            $("#BatchProgramID").change(function () {
                GetBatchProgramSemesterList();
            });
        });

        function GetBatchProgramSemesterList() {
            var BatchProgramID = $("#BatchProgramID").val();
            $.ajax({
                url: "@Url.Content("~/StudentBatchProgramCourses/GetBatchProgramSemesterList")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchProgramID: + BatchProgramID }),
                success: function (result) {
                    $("#YearSemesterNo").html("");
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#YearSemesterNo").append($('<option></option>').val(sem.YearSemesterNo).html(sem.YearSemesterNo));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

            function GetStudentsList() {
                $("#searchValue").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: "@Url.Content("~/StudentBatchProgramCourses/GetStudentsList")",
                            datatype: 'json',
                            data: { searchValue: $("#searchValue").val(), BatchProgramID: $("#BatchProgramID").val() },
                            success: function (data) {
                                response($.map($.parseJSON(data), function (item) {
                                    return {
                                        label: item.Name,
                                        value: item.Name
                                    };
                                }));
                            },
                            error: function (xhr, status, error) {
                                alert(xhr.error);
                            }
                        });
                    },
                    select: function (event, ui) {
                        var splitted = ui.item.label.split(":");
                        $("#StudentID").val(splitted[0]); 
                    }
                });
            }

</script>
}

