@model CampusManagement.Models.ExamEligibleStudentForRoomAssignmentTestViewModel
@using CampusManagement.Models

@using (Html.BeginForm("ExamRoomDispatch", "ExamRoomDispatch", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <h2><span class="col-sm-12"> Eligible Student For Exam </span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")

    <div class="row">

        <div class="col-sm-4">
            <label>Exam</label>
            @Html.DropDownListFor(model => model.ExamID, null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })

        </div>

        <div class="col-sm-4">
            <label>Exam Dates</label>
            @Html.DropDownList("ExamDateID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExamDateID, "", new { @class = "text-danger" })

        </div>

        <div class="col-sm-4">
            <label>Exam Time Slots</label>
            @Html.DropDownList("ExamDateTimeSlotID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExamDateTimeSlotID, "", new { @class = "text-danger" })
        </div>


    </div>

    <div class="row" style="margin-top: 1em;">
        <div class="col-sm-3">
            <button type="submit" class="btn btn-primary" value="Search">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>

    </div>

}

@using (Html.BeginForm("ExamRoomDispatch", "ExamRoomDispatch", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <br />
    string errorstring = ViewBag.MessageType;
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    int hdnExamDateID = (ViewBag.hdnExamDateID == null) ? 0 : ViewBag.hdnExamDateID;
    int hdnExamID = (ViewBag.hdnExamID == null) ? 0 : ViewBag.hdnExamID;
    int hdnExamDateTimeSlotID = (ViewBag.hdnExamDateTimeSlotID == null) ? 0 : ViewBag.hdnExamDateTimeSlotID;
    List<GetExamEligibleStudentForRoomAssignment_Result> lstDocs = new List<GetExamEligibleStudentForRoomAssignment_Result>();
    if (errorstring == "")
    {
        lstDocs = dbc.GetExamEligibleStudentForRoomAssignment(hdnExamID, hdnExamDateID, hdnExamDateTimeSlotID).ToList();
    }



    <input name="hdnExamID" value="@ViewBag.hdnExamID" type="hidden" id="hdnExamID" />
    <input name="hdnExamDateID" value="@ViewBag.hdnExamDateID" type="hidden" id="hdnExamDateID" />
    <input name="hdnExamDateTimeSlotID" value="@ViewBag.hdnExamDateTimeSlotID" type="hidden" id="hdnExamDateTimeSlotID" />
    <input id="hdnRowCount" name="hdnRowCount" value="@lstDocs.Count" type="hidden" />
    int i = 1;

    if (lstDocs.Count > 0)
    {
        <table class="table">
            <tr>
                <th>
                    Exam Subject Details
                </th>

                <th>
                    Action
                </th>


            </tr>

            @foreach (var item in lstDocs)
            {

                <tr>
                    <td>
                        <span style="font-weight:bold">Session : </span>  @Html.DisplayFor(modelItem => item.BatchSession) <span style="color:red">( Program:  @Html.DisplayFor(modelItem => item.ProgramName) )</span><br />
                        <span style="font-weight:bold">Subject: </span> @Html.DisplayFor(modelItem => item.CourseCode) - @Html.DisplayFor(modelItem => item.CourseName) <span style="color:red">( Semester# :  @Html.DisplayFor(modelItem => item.YearSemesterNo) )</span><br />
                        <span style="font-weight:bold"> Eligible Student Count:</span> <span style="color:red">(@Html.DisplayFor(modelItem => item.StudentCount))</span>
                    </td>
                    <td>
                        @*@Html.ActionLink("Eligible Student For Exam", "StudentAttendanceSummary", new { ProgramCourseID = item.ProgramCourseID })*@
                    </td>
                </tr>
                i++;
            }
        </table>
        <hr />

    }

}

@section Scripts {
    <script>
        $(document).ready(function () {
            GetExamDatesByExamID();
            $("#ExamDateID").val(@ViewBag.hdnExamDateID);
            GetExamDateTimeSlotByExamID();
            $("#ExamDateTimeSlotID").val(@ViewBag.hdnExamDateTimeSlotID);

            $("#ExamID").change(function () {
                GetExamDatesByExamID();
                $("#ExamDateID").val(@ViewBag.hdnExamDateID);
                GetExamDateTimeSlotByExamID();
                $("#ExamDateTimeSlotID").val(@ViewBag.hdnExamDateTimeSlotID);
            });


        });

        function GetExamDatesByExamID() {
            var ExamID = $("#ExamID").val();
            $.ajax({
                url: "@Url.Content("~/ExamRoomDispatchTest/GetExamDatesByExamID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ ExamID: +ExamID }),
                success: function (result) {
                    $("#ExamDateID").html("");
                    $("#ExamDateID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#ExamDateID").append($('<option></option>').val(sem.ExamDateID).html(sem.ExamDateTitle));
                    });
                    $("#ExamDateID").val(@ViewBag.hdnExamDateID)
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetExamDateTimeSlotByExamID() {
            var ExamID = $("#ExamID").val();
            $.ajax({
                url: "@Url.Content("~/ExamRoomDispatchTest/GetExamDateTimeSlotByExamID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ ExamID: +ExamID }),
                success: function (result) {
                    $("#ExamDateTimeSlotID").html("");
                    $("#ExamDateTimeSlotID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#ExamDateTimeSlotID").append($('<option></option>').val(sem.ExamDateTimeSlotID).html(sem.TimeSlot));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }
    </script>
}






