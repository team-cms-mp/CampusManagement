@model CampusManagement.Models.ChatUserViewModel
@using CampusManagement.Models
@{
    ViewBag.Title = "Learning Subjects ";
    ////Layout = "~/Views/Shared/_MyLayout.cshtml";
}

@{ 
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();

}
<div class="row">
    <h2><span class="col-sm-12">Chat Room</span></h2>
</div>


<table style="width:100%">

    <tr style="width:100%">
        <td style="width:30%">
            <div class="row divHeading">
                @*<a data-toggle="collapse" style="cursor:pointer" data-target=""><h4 style="color: white;" aria-hidden="true"> <b> Admin List</b>&nbsp; &nbsp; <b style="font-weight: bolder;" class="pull-right fa fa-angle-down"></b></h4> </a>*@
                <a data-toggle="collapse" style="cursor:pointer" data-target=""><h4 style="color: white;" aria-hidden="true"> <b> Admin List</b></h4> </a>
            </div>
            <div style="height:200px;overflow-x:auto!important;">
                <table class="table">
                    
                    @foreach (var itemAdmin in Model.AdminList)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => itemAdmin.UserName) (@Html.DisplayFor(modelItem => itemAdmin.Designation))
                            </td>

                            <td>
                                @Html.ActionLink("Chat", "UserChat", new { ChatWithEmpID = itemAdmin.EmpID }, null)

                            </td>
                        </tr>
                    }

                </table>
            </div>
            <br />
            <div class="row divHeading">
                <a data-toggle="collapse" style="cursor:pointer" data-target=""><h4 style="color: white;" aria-hidden="true"> <b> Lecturer List</b></h4> </a>
            </div>
            <div style="height:200px;overflow-x:auto!important;">
                <table class="table">
                   
                    @foreach (var itemLecturar in Model.LecturarList)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => itemLecturar.UserName) (@Html.DisplayFor(modelItem => itemLecturar.Designation))
                            </td>

                            <td>
                                @Html.ActionLink("Chat", "UserChat", new { ChatWithEmpID = itemLecturar.EmpID }, null)

                            </td>
                        </tr>
                    }

                </table>
            </div>
            <br/>
            <div class="row divHeading">
                <a data-toggle="collapse" style="cursor:pointer" data-target=""><h4 style="color: white;" aria-hidden="true"> <b> Student List</b></h4> </a>
            </div>
            <div style="height:200px;overflow-x:auto!important;">
                <table class="table">

                    @foreach (var itemStudent in Model.StudentList)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => itemStudent.UserName) (@Html.DisplayFor(modelItem => itemStudent.Designation))
                            </td>

                            <td>
                                @Html.ActionLink("Chat", "UserChat", new { ChatWithEmpID = itemStudent.EmpID }, null)

                            </td>
                        </tr>
                    }

                </table>
            </div>
        </td>


        <td style="border-radius: 10px;width:70%;vertical-align:top;margin-top:20px">
            <div id="divChat" name="divChat" style="height:500px;overflow-x:auto!important;margin-left:100px;margin-right:100px; background-color:lightgray">
               
              @{
                  List<GetUserChatByUserID_Result> UserChatList = new List<GetUserChatByUserID_Result>();
                  int CurrentUserEmpID = Convert.ToInt32(ViewBag.CurrentUserEmpID);
                  int ChatWithUserEmpID = Convert.ToInt32(ViewBag.ChatWithUserEmpID);
                  UserChatList = dbc.GetUserChatByUserID(CurrentUserEmpID, ChatWithUserEmpID).ToList();
                  if (UserChatList.Count > 0)
                  {
                    <input name="hdnUserChatID" value="@UserChatList[0].UserChatID" type="hidden" id="hdnUserChatID" />
                      foreach (GetUserChatByUserID_Result itemchat in UserChatList)
                      {
                          if (CurrentUserEmpID == itemchat.UserFromID)
                          {
                            <div class="row" style="border-radius: 10px; height:30px;background-color:yellow ;margin-left:20px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px">
                              <span style="font-weight:bold">You: </span>@Html.DisplayFor(modelItem => itemchat.UserMessage)
                              
                            </div>
                          }
                          else if (ChatWithUserEmpID == itemchat.UserFromID)
                          {
                            <div class="row" style="border-radius: 10px;height:30px; background-color:aqua; margin-left:70px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px">
                                @Html.DisplayFor(modelItem => itemchat.UserMessage)
                            </div>
                          }


                      }

                  }
                  else
                  {
                    <input name="hdnUserChatID" value="0" type="hidden" id="hdnUserChatID" />
                  }


            }
            </div>
            <div style="vertical-align:bottom ;height:70px;margin-left:100px;margin-right:100px; background-color:lightgray">

                    <input name="hdnCurrentUserEmpID" value="@ViewBag.CurrentUserEmpID" type="hidden" id="hdnCurrentUserEmpID" />
                    <input name="hdnChatWithUserEmpID" value="@ViewBag.ChatWithUserEmpID" type="hidden" id="hdnChatWithUserEmpID" />
                   
                    <div class="row" style="padding-top:20px">
                        <div class="col-sm-10">
                            <input class = "form-control" name="txtChatMessage" value="" type="text" id="txtChatMessage" style="margin-left:30px" />
                        </div>
                        <div class="col-sm-2">
                            <input type="submit" value="Send" id="btnSend" name="btnSend" class="btn btn-primary" />
                        </div>
                    </div>
                    <br />
                   
               

            </div>
</td>
    </tr>
</table>

<script type="text/javascript">

    $(document).ready(function () {
        setInterval(function () {
            LoadChatWithInterval();
            $('#divChat').animate({
                scrollTop: $('#divChat').get(0).scrollHeight
            }, 1000);
        }, 5000);
        $('#btnSend').click(function () {
            LoadChat();
            $('#divChat').animate({
                scrollTop: $('#divChat').get(0).scrollHeight
            }, 1000);

        });
    });

    function LoadChat() {
        var ChatWithUserID = $("#hdnChatWithUserEmpID").val();
        var CurrentUserEmpID = $("#hdnCurrentUserEmpID").val();
        var hdnUserChatID =  $("#hdnUserChatID").val()

        $.ajax({
            url: "@Url.Content("~/UserChat/LoadChat")",
            type: 'POST',
        datatype: 'application/json',
        contentType: 'application/json',
        async: false,
        data: JSON.stringify({ ChatWithUserID: +ChatWithUserID, ChatMessage: $("#txtChatMessage").val(), UserChatID: $("#hdnUserChatID").val() }),
        success: function (result) {
            $("#divChat").html("");
            $("#txtChatMessage").val("");
         
            $.each($.parseJSON(result), function (i, chat) {
                if (i == 0) {
                    $("#divChat").append('<input name="hdnUserChatID" value=' + chat.UserChatID + ' type="hidden" id="hdnUserChatID" />');
                }
                if (CurrentUserEmpID == chat.UserFromID) {
                    $("#divChat").append('<div class="row" style="border-radius: 10px; height:30px;background-color:yellow ;margin-left:20px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px"><span style="font-weight:bold">You: </span> ' + chat.UserMessage + '</div>');

                } else if (ChatWithUserID == chat.UserFromID) {

                    $("#divChat").append('<div class="row" style="border-radius: 10px;height:30px; background-color:aqua; margin-left:70px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px">' + chat.UserMessage + '</div>');
                }

            });


        },
        error: function () {
            alert(" Something went wrong..");
        },
            });
    }



    function LoadChatWithInterval() {
        var ChatWithUserID = $("#hdnChatWithUserEmpID").val();
        var CurrentUserEmpID = $("#hdnCurrentUserEmpID").val();
        var hdnUserChatID = $("#hdnUserChatID").val()

        $.ajax({
            url: "@Url.Content("~/UserChat/LoadChatWithInterval")",
            type: 'POST',
        datatype: 'application/json',
        contentType: 'application/json',
        async: false,
        data: JSON.stringify({ ChatWithUserID: +ChatWithUserID}),
        success: function (result) {
            $("#divChat").html("");
            $.each($.parseJSON(result), function (i, chat) {
                if (i == 0) {
                    $("#divChat").append('<input name="hdnUserChatID" value=' + chat.UserChatID + ' type="hidden" id="hdnUserChatID" />');
                }
                
                if (CurrentUserEmpID == chat.UserFromID) {
                    $("#divChat").append('<div class="row" style="border-radius: 10px; height:30px;background-color:yellow ;margin-left:20px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px"> <span style="font-weight:bold">You: </span> ' + chat.UserMessage + '</div>');

                } else if (ChatWithUserID == chat.UserFromID) {

                    $("#divChat").append('<div class="row" style="border-radius: 10px;height:30px; background-color:aqua; margin-left:70px;margin-right:20px;margin-top:15px; padding-top:5px; padding-left:5px;padding-right:5px">' + chat.UserMessage + '</div>');
                }

            });

        },
        error: function () {
            alert(" Something went wrong..");
        },
            });
    }

</script>





