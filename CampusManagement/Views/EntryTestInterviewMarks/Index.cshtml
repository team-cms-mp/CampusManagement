@model CampusManagement.Models.GetSelectionCriteria_ResultViewModel
@using CampusManagement.Models
@{
    ViewBag.Title = "Entry Test/Interview Marks";
    ////Layout = "~/Views/Shared/_MyLayout.cshtml";
}

@{
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();

    if (Model.DisplayMode == "WriteOnly")
    {
        Html.RenderPartial("Search", new CampusManagement.Models.GetSelectionCriteria_Result());
    }
    int i = 1;
}

<div class="row">
    <div class="col-sm-3">
        <label class="control-label">Total Marks</label>
        <input id="TotalMarks" class="form-control" />
    </div>
</div>
<br />
@using (Html.BeginForm("SaveAll", "EntryTestInterviewMarks", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="hdnDegreeID" value="@ViewBag.hdnDegreeID" />
    <input type="hidden" name="hdnBatchID" value="@ViewBag.hdnBatchID" />
    <input type="hidden" name="hdnBatchProgramID" value="@ViewBag.hdnBatchProgramID" />
    <input type="hidden" name="hdnFullName" value="@ViewBag.hdnFullName" />
    <input type="hidden" name="TotalRows" value="@Model.GetSelectionCriteria_Results.Count" />
    <table class="table">
        <tr>
            <th>
                Form #
            </th>
            <th>
                Applicant Name
            </th>
            <th>
                Father Name
            </th>
            <th>
                Total Marks
            </th>
            <th>
                Obtained Marks
            </th>
            <th>
                Test #
            </th>
        </tr>

        @foreach (var item in Model.GetSelectionCriteria_Results)
        {
            string FormNoID = "txtFormNo_" + i;
            string TotalMarksID = "txtTotalMarks_" + i;
            string ObtainedMarksID = "txtObtainedMarks_" + i;
            string EntryTestID = "cmbEntryTestID_" + i;
            <tr>
                <td>
                    <input name="@FormNoID" type="hidden" value="@item.FormNo" class="form-control col-sm-1" readonly />
                    @Html.DisplayFor(modelItem => item.FormNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FatherName)
                </td>
                <td>
                    <input id="@TotalMarksID" name="@TotalMarksID" value="@item.TotalMarks" class="form-control col-sm-1 dummyClassTotalMarks" readonly />
                </td>
                <td>
                    <input id="@ObtainedMarksID" name="@ObtainedMarksID" value="@item.ObtainedMarks" class="form-control col-sm-1 dummyClassObtainedMarks" />
                </td>
                <td>
                    <select id="@EntryTestID" name="@EntryTestID" value="@item.EntryTestID" class="form-control col-sm-1" disabled>
                        @{
                            Applicant ap = dbc.Applicants.FirstOrDefault(a => a.FormNo == item.FormNo);
                            <option value="0">--Select--</option>
                            foreach (var itemEntryTest in dbc.EntryTests)
                            {
                                if (ap.EntryTestID == itemEntryTest.EntryTestID)
                                {
                                    <option value="@itemEntryTest.EntryTestID" selected>@itemEntryTest.EntryTestName</option>
                                }
                                else
                                { 
                                    <option value="@itemEntryTest.EntryTestID">@itemEntryTest.EntryTestName</option>
                                }
                            }
                        }
                    </select>
                </td>
            </tr>
            i++;
        }
    </table>
    <div class="row">
        <div class="col-sm-12">
            <input type="submit" value="Save All" class="btn btn-primary" />
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#DegreeID").val("22");
            GetPrograms_by_FacultyLevelBatch();
            GetEntryTestsByDegreeID();
            if ("@ViewBag.hdnBatchProgramID" != "")
            {
                $("#BatchProgramID").val("@ViewBag.hdnBatchProgramID");
            }

            if ("@ViewBag.hdnDegreeID" != "") {
                $("#DegreeID").val("@ViewBag.hdnDegreeID");
                GetEntryTestsByDegreeID();
                if ("@ViewBag.hdnEntryTestID" != "") {
                    $("#EntryTestID").val("@ViewBag.hdnEntryTestID");
                }
            }

            $("#BatchID").change(function () {
                GetPrograms_by_FacultyLevelBatch();
            });

            $("#DegreeID").change(function () {
                GetEntryTestsByDegreeID();
            });

            var dummyClassTotalMarks = $(".dummyClassTotalMarks");
            var dummyClassObtainedMarks = $(".dummyClassObtainedMarks");
            for (var j = 0; j < dummyClassTotalMarks.length; j++) {
                $("#" + dummyClassTotalMarks[j].id).ForceNumericOnly();
                if ($("#" + dummyClassTotalMarks[j].id).val() == "" || $("#" + dummyClassTotalMarks[j].id).val() == null) {
                    $("#" + dummyClassTotalMarks[j].id).val("0");
                }
            }

            for (var j = 0; j < dummyClassObtainedMarks.length; j++) {
                $("#" + dummyClassObtainedMarks[j].id).ForceNumericOnly();
                $("#" + dummyClassObtainedMarks[j].id).attr("maxlength", "7");
                var DegreeName = $("#DegreeID option:selected").text();
                if (DegreeName != "Interview" && DegreeName != "Test") {
                    $("#" + dummyClassObtainedMarks[j].id).attr("readonly", true);
                }

                if ($("#" + dummyClassObtainedMarks[j].id).val() == "" || $("#" + dummyClassObtainedMarks[j].id).val() == null) {
                    $("#" + dummyClassObtainedMarks[j].id).val("0");
                }
            }

            $("#TotalMarks").blur(function () {
                var DegreeName = $("#DegreeID option:selected").text();
                if ($("#TotalMarks").val() != ""
                    && $("#TotalMarks").val() != "0"
                    && (DegreeName == "Interview" || DegreeName == "Test")) {
                    for (var j = 0; j < dummyClassTotalMarks.length; j++) {
                        $("#" + dummyClassTotalMarks[j].id).val($("#TotalMarks").val());
                    }
                }
            });
        });

        function GetPrograms_by_FacultyLevelBatch() {
            var BatchID = $("#BatchID").val();
            $.ajax({
                url: "@Url.Content("~/EntryTestInterviewMarks/GetPrograms_by_FacultyLevelBatch")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchID: +BatchID }),
                success: function (result) {
                    $("#BatchProgramID").html("");
                    $("#BatchProgramID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#BatchProgramID").append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetEntryTestsByDegreeID() {
            var DegreeID = $("#DegreeID").val();
            $.ajax({
                url: "@Url.Content("~/EntryTestInterviewMarks/GetEntryTestsByDegreeID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ DegreeID: +DegreeID }),
                success: function (result) {
                    $("#EntryTestID").html("");
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#EntryTestID").append($('<option></option>').val(sem.EntryTestID).html(sem.EntryTestName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }
    </script>
}