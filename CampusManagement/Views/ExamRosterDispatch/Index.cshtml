@model CampusManagement.Models.ExamEligibleStudentForRoomAssignmentViewModel
@using CampusManagement.Models
<!-- Include Twitter Bootstrap and jQuery: -->
<!-- Include the plugin's CSS and JS: -->
<link href="~/assets/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/assets/js/bootstrap.min.js"></script>
@*<script src="~/assets/js/jquery-2.1.1.min.js"></script>*@
<script src="~/assets/js/bootstrap-multiselect.js"></script>
<link href="~/assets/css/bootstrap-multiselect.css" rel="stylesheet" />

@using (Html.BeginForm("Index", "ExamRosterDispatch", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <h2><span class="col-sm-12"> Roster Dispatch For Exam </span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")

    <div class="row">

        <div class="col-sm-4">
            <label>Exam</label>
            @Html.DropDownListFor(model => model.ExamID, null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })

        </div>

        <div class="col-sm-4">
            <label>Exam Dates</label>
            @Html.DropDownListFor(model => model.ExamDateID, null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
            @*@Html.DropDownList("ExamDateID", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.ExamDateID, "", new { @class = "text-danger" })

        </div>

        <div class="col-sm-4">
            <label>Exam Time Slots</label>
            @Html.DropDownListFor(model => model.ExamDateTimeSlotID, null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
            @*@Html.DropDownList("ExamDateTimeSlotID", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.ExamDateTimeSlotID, "", new { @class = "text-danger" })
        </div>


    </div>

    <div class="row" style="margin-top: 1em;">
        <div class="col-sm-3">
            <button type="submit" class="btn btn-primary" value="Search">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>

    </div>

}

@{

    string errorstring = ViewBag.MessageType;
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    int hdnExamDateID = (ViewBag.hdnExamDateID == null) ? 0 : ViewBag.hdnExamDateID;
    int hdnExamID = (ViewBag.hdnExamID == null) ? 0 : ViewBag.hdnExamID;
    int hdnExamDateTimeSlotID = (ViewBag.hdnExamDateTimeSlotID == null) ? 0 : ViewBag.hdnExamDateTimeSlotID;
    int hdnRoomID = (ViewBag.hdnRoomID == null) ? 0 : ViewBag.hdnRoomID;

    if (errorstring == "")
    {
        Model.CourseList = dbc.GetExamEligibleStudentForRoomAssignment(hdnExamID, hdnExamDateID, hdnExamDateTimeSlotID).ToList();
        Model.AvailabeRoomList = dbc.GetExamRoomsForRoomAssignment(hdnExamID, hdnExamDateID, hdnExamDateTimeSlotID).ToList();
    }


    <input name="hdnExamID" value="@ViewBag.hdnExamID" type="hidden" id="hdnExamID" />
    <input name="hdnExamDateID" value="@ViewBag.hdnExamDateID" type="hidden" id="hdnExamDateID" />
    <input name="hdnExamDateTimeSlotID" value="@ViewBag.hdnExamDateTimeSlotID" type="hidden" id="hdnExamDateTimeSlotID" />

    <table style="width:100%">
        <tr style="width:100%">
            <td style="width:100%; background-color:lightgray ; vertical-align:top">
              @if (Model.CourseList  != null)
              { 
                if (Model.CourseList.Count > 0)
                {
                    <table class="table">
                        <tr>
                            <th>
                                Exam Subject Details
                            </th>

                            <th>
                                Roster Dispatch 
                            </th>


                        </tr>
                        @for (var z = 0; z < Model.CourseList.Count; z++)
                        {

                            <tr>
                                <td>

                                    @{ string id = "hdID_" + Model.CourseList[z].ExamsDateSheetDetailID;}
                                    @Html.Hidden(@id, new { value = Model.CourseList[z].ExamsDateSheetDetailID })

                                    <span style="font-weight:bold">Session : </span>  @Html.DisplayFor(modelItem => Model.CourseList[z].BatchSession) <span style="color:red">( Program:  @Html.DisplayFor(modelItem => Model.CourseList[z].ProgramName) )</span><br />
                                    <span style="font-weight:bold">Subject: </span> @Html.DisplayFor(modelItem => Model.CourseList[z].CourseCode) - @Html.DisplayFor(modelItem => Model.CourseList[z].CourseName) <span style="color:red">( Semester# :  @Html.DisplayFor(modelItem => Model.CourseList[z].YearSemesterNo) )</span><br />
                                    <span style="font-weight:bold"> Eligible Student Count:</span> <span style="color:red">(@Html.DisplayFor(modelItem => Model.CourseList[z].StudentCount))</span>

                                    @Html.HiddenFor(modelItem => Model.CourseList[z].StudentCount)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].BatchName)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].BatchSession)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].CourseCode)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].CourseName)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].ExamsDateSheetDetailID)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].ProgramCode)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].ProgramName)
                                    @Html.HiddenFor(modelItem => Model.CourseList[z].YearSemesterNo)
                                </td>

                                <td>
                                    @{
                                        string btnId = "btn_" + Model.CourseList[z].ExamsDateSheetDetailID;
                                        string ExamsDateSheetDetailID = Model.CourseList[z].ExamsDateSheetDetailID.ToString();
                                        string StudentCount = Model.CourseList[z].StudentCount.ToString();
                                        bool IsAllreadyAdded = (bool)dbc.VerifyRoomDispatch(Model.CourseList[z].ExamsDateSheetDetailID).FirstOrDefault();
                                    }
                                    @if (IsAllreadyAdded == true)
                                    {
                                        @Html.ActionLink("Roster Dispatch", "RosterDispatch", new { ExamsDateSheetDetailID = ExamsDateSheetDetailID })


                                    }
                                    else
                                    {
                                        <span style="color:red">Please Dispatch Room First</span>
                                            @*<input id="@btnId" type="submit" class="btn btn-primary" value="Room Dispatch" onclick="@("StudentAttemptDone('"+ExamsDateSheetDetailID+"','"+ StudentCount + "')")" />*@

                                    }

</td>
                            </tr>

                                        }
                    </table>
                    <br />


                         }

                  }
            </td>

        </tr>

    </table>



}

@section Scripts {
    <script>
        $(document).ready(function () {
            GetExamDatesByExamID();
            $("#ExamDateID").val(@ViewBag.hdnExamDateID);
            GetExamDateTimeSlotByExamID();
            $("#ExamDateTimeSlotID").val(@ViewBag.hdnExamDateTimeSlotID);

            $("#ExamID").change(function () {
                GetExamDatesByExamID();
                $("#ExamDateID").val(@ViewBag.hdnExamDateID);
                GetExamDateTimeSlotByExamID();
                $("#ExamDateTimeSlotID").val(@ViewBag.hdnExamDateTimeSlotID);
            });
        });

        function GetExamDatesByExamID() {
            var ExamID = $("#ExamID").val();
            $.ajax({
                url: "@Url.Content("~/ExamRosterDispatch/GetExamDatesByExamID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ ExamID: +ExamID }),
                success: function (result) {
                    $("#ExamDateID").html("");
                    $("#ExamDateID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#ExamDateID").append($('<option></option>').val(sem.ExamDateID).html(sem.ExamDateTitle));
                    });
                    $("#ExamDateID").val(@ViewBag.hdnExamDateID)
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetExamDateTimeSlotByExamID() {
            var ExamID = $("#ExamID").val();
            $.ajax({
                url: "@Url.Content("~/ExamRosterDispatch/GetExamDateTimeSlotByExamID")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ ExamID: +ExamID }),
                success: function (result) {
                    $("#ExamDateTimeSlotID").html("");
                    $("#ExamDateTimeSlotID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#ExamDateTimeSlotID").append($('<option></option>').val(sem.ExamDateTimeSlotID).html(sem.TimeSlot));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }



    </script>
}

