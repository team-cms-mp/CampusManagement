@model CampusManagement.Models.GetExamDateTimeSlot_By_ExamIDExamDateID_Result
@using CampusManagement.Models
@using (Html.BeginForm("Edit", "ExamDateTimeSolts", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <input name="ExamDateID" value="@ViewBag.hdnExamDateID" type="hidden" id="ExamDateID" />
    <input name="ExamID" value="@ViewBag.hdnExamID" type="hidden" id="ExamID" />

    <div class="row">
        <h1>
            <span class="col-sm-12">
                @{
                    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
                    Exam nt = dbc.Exams.FirstOrDefault(bp => bp.ExamID == Model.ExamID);
                    @Html.Raw(nt.ExamTitle)
                } :
            </span>
        </h1>
    </div>
    <div class="row">
        <h2><span class="col-sm-12">Edit Times</span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")
    @Html.HiddenFor(model => model.ExamDateTimeSlotID)
    <div class="row">

        

        <div class="col-sm-3">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @required = true } })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })

        </div>

        <div class="col-sm-3">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @required = true } })
            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })

        </div>
        <div class="col-sm-3">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("IsActive", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
     
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            <input type="submit" value="Add" class="btn btn-primary" />
            @Html.ActionLink("Refresh", "Index", "ExamDateTimeSolts", new { ExamID = ViewBag.hdnExamID }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Back to Exams", "Index", "Exams", new { ExamID = ViewBag.hdnExamID }, new { @class = "btn btn-primary" })

        </div>
    </div>
}


