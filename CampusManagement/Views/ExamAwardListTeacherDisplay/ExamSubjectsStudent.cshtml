@model CampusManagement.Models.ExamSubjectsStudentSecondViewModel
@using CampusManagement.Models


<div class="row">
    <h2><span class="col-sm-12"> Exam Subject Award List Detail Display</span></h2>
</div>
<hr style="border-top: 1px solid #6d9b90;" />
@using (Html.BeginForm("ExamGradeFormRequestApproveUpdate", "ExamAwardListTeacherDisplay", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    @*<input name="hfExamID" value="@ViewBag.hfExamID" type="hidden" id="hfExamID" />
        <input name="hfProgramCourseID" value="@ViewBag.hfProgramCourseID" type="hidden" id="hfProgramCourseID" />
        <input name="hfExamsDateSheetDetailID" value="@ViewBag.hfExamsDateSheetDetailID" type="hidden" id="hfExamsDateSheetDetailID" />
        <input name="hfTeacherID" value="@ViewBag.hfTeacherID" type="hidden" id="hfTeacherID" />*@
    <table style="width:100%;background-color:lightyellow ; vertical-align:top">
        <tr style="width:100%">
            <td style="width:100%; ">
                @if (Model.StudeltList != null)
                {
                    if (Model.StudeltList.Count > 0)
                    {
                        @Html.HiddenFor(modelItem => Model.ExamID)
                        @Html.HiddenFor(modelItem => Model.ProgramCourseID)
                        @Html.HiddenFor(modelItem => Model.ExamsDateSheetDetailID)
                        @Html.HiddenFor(modelItem => Model.TeacherID)
                        <div class="row" style="margin-top:20px">
                            <table style="width:100%">
                                <tr style="width:100%">
                                    <td style="width:20%;padding-left:30px;padding-right:30px">
                                        <div style="width:100%;border: 1px solid black;font-weight:bold">
                                            <div style="width:100%;text-align:center">
                                                Grade Count
                                            </div>

                                            <table style="width:100%">

                                                <tr style="width:100%">
                                                    <td style="width:70%;padding-left:20px">I =</td>
                                                    <td style="width:30%">B =</td>
                                                </tr>
                                                <tr style="width:100%">
                                                    <td style="width:70%;padding-left:20px">W =</td>
                                                    <td style="width:30%">B+ =</td>
                                                </tr>
                                                <tr style="width:100%">
                                                    <td style="width:70%;padding-left:20px">F =</td>
                                                    <td style="width:30%">A =</td>
                                                </tr>

                                                <tr style="width:100%">
                                                    <td style="width:70%;padding-left:20px">C =</td>
                                                    <td style="width:30%"></td>
                                                </tr>

                                                <tr style="width:100%">
                                                    <td style="width:70%;padding-left:20px">C+ =</td>
                                                    <td style="width:30%"></td>
                                                </tr>
                                            </table>

                                        </div>
                                    </td>
                                    <td style="width:40%;text-align:inherit ">
                                        <h3><span style="font-weight:bold;margin-left:10px; text-align:inherit "> Award List @Model.StudeltList[0].StudentObj.ExamTitle</span></h3>
                                    </td>
                                    <td style="width:30%;padding-right:10px;padding-right:30px">
                                        <div style="width:100%;">
                                            <img style="width: 12em;height: 3em;margin-top:10px;margin-left:200px" class="img-responsive" src="@Url.Content("~/assets/img/iqra/logo.png")">
                                        </div>
                                        <br />
                                        <div style="width:100%;border: 1px solid black;font-weight:bold;">

                                            <div style="width:100%;text-align:center">
                                                Grading Formula
                                            </div>

                                            <table style="width:100%">

                                                <tr style="width:100%">
                                                    <td style="width:60%;padding-left:20px"><span>A</span> <span style="margin-left:30px">88 and Above</span></td>
                                                    <td style="width:40%"></td>

                                                </tr>

                                                <tr style="width:100%">
                                                    <td style="width:60%;padding-left:20px"> <span>B+</span> <span style="margin-left:22px">81-87</span></td>
                                                    <td style="width:40%"><span>C</span> <span style="margin-left:35px">60-66</span></td>

                                                </tr>
                                                <tr style="width:100%">
                                                    <td style="width:60%;padding-left:20px"> <span>B</span> <span style="margin-left:30px">74-80</span></td>
                                                    <td style="width:40%"><span>C+</span> <span style="margin-left:26px">67-73</span></td>

                                                </tr>
                                                <tr style="width:100%">
                                                    <td style="width:60%;padding-left:20px"> <span>F</span> <span style="margin-left:30px"> < 60 </span></td>
                                                    <td style="width:40%"><span>I</span> <span style="margin-left:42px">Incomplete</span></td>

                                                </tr>

                                            </table>

                                        </div>
                                    </td>
                                </tr>

                            </table>



                        </div>



                        <div class="row" style="margin-top:20px">
                            <table style="width:100%;margin-left:10px">
                                @*<tr style="width:100%">
                                        <td style="width:100%">
                                            <h3><span style="font-weight:bold;margin-left:10px">@Model.StudeltList[0].ExamTitle</span></h3>
                                        </td>
                                    </tr>*@
                                <tr style="width:100%">
                                    <td style="width:100%">
                                        <span style="font-weight:bold;margin-left:10px">Course Code & Title : </span><span style="color:red">@Html.DisplayFor(modelItem => Model.StudeltList[0].StudentObj.CourseCode) - ( @Html.DisplayFor(modelItem => Model.StudeltList[0].StudentObj.CourseName) )</span>
                                    </td>
                                </tr>
                                <tr style="width:100%">
                                    <td style="width:100%">
                                        <span style="font-weight:bold;margin-left:10px">Instructor : </span><span style="color:red">Teacher Name Here</span>
                                    </td>
                                </tr>
                                <tr style="width:100%">
                                    <td style="width:100%">
                                        <span style="font-weight:bold;margin-left:10px">Seccorscode : </span><span style="color:red">Seccorscode  Here</span>
                                    </td>
                                </tr>
                            </table>



                        </div>
                        <hr style="border-top: 1px solid #6d9b90;" />
                        <table class="table">
                            <tr>
                                <th>
                                    Serial Number
                                </th>
                                <th>
                                    Reg No
                                </th>
                                <th>
                                    AltCode
                                </th>
                                <th>
                                    Student Name
                                </th>
                                <th>
                                    Degree
                                </th>

                                <th>
                                    Final Marks Out OF 100%
                                </th>
                                <th>
                                    Instructor Approve
                                </th>
                                <th>
                                    Hod Approve
                                </th>


                            </tr>
                            @for (var z = 0; z < Model.StudeltList.Count; z++)
                            {

                                <tr>
                                    <td>
                                        @{ int currentserial = z + 1;
                                            string Sernumber = "Sr# " + currentserial + "";}
                                        <span style="font-weight:bold">@Sernumber </span>
                                    </td>

                                    <td>
                                        <span style="color:red"> @Html.DisplayFor(modelItem => Model.StudeltList[z].StudentObj.RegistrationNo) </span>

                                    </td>
                                    <td></td>
                                    <td>

                                        <span style="color:red"> @Html.DisplayFor(modelItem => Model.StudeltList[z].StudentObj.StudentName) </span>



                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamEligibleStudentsID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.StudentBatchProgramCourseID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamsDateSheetDetailID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.RoomID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.SeatNumber)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamDateID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamDateTimeSlotID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ProgramCourseID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.BatchSession)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ProgramName)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.CourseCode)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.CourseName)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.StudentName)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.RegistrationNo)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.RollNumber)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.StudentID)
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].StudentObj.ExamTitle)

                                    </td>
                                    <td>
                                        <span style="color:red"> @Html.DisplayFor(modelItem => Model.StudeltList[z].StudentObj.ProgramName) </span>

                                    </td>
                                    <td>
                                        @{
                                            decimal? TotalAssignementMarks = 0;
                                            decimal? TotalQuiztMarks = 0;
                                            decimal? TotalObtainAssignementMarks = 0;
                                            decimal? TotalObtainQuiztMarks = 0;
                                            decimal? OverallObtailmarks = 0;
                                            //ExamResultForDisplayViewModel modelExamResultForDisplay = new ExamResultForDisplayViewModel();
                                            Model.StudeltList[z].ExamResultForDisplayObj = dbc.GetExamAwardListResultForDisplay(Model.StudeltList[z].StudentObj.ExamID, Model.StudeltList[z].StudentObj.ProgramCourseID, Model.StudeltList[z].StudentObj.StudentID).FirstOrDefault();
                                            if (Model.StudeltList[z].ExamResultForDisplayObj.ExamStudentSubjectMarkID == 0)
                                            {
                                                GetExamAwardListResultForDisplay_Result Obj = new GetExamAwardListResultForDisplay_Result();
                                                Obj.ExamID = Model.StudeltList[z].StudentObj.ExamID;
                                                Obj.ProgramCourseID = Model.StudeltList[z].StudentObj.ProgramCourseID;
                                                Obj.StudentID = Model.StudeltList[z].StudentObj.StudentID;
                                                Model.StudeltList[z].ExamResultForDisplayObj = Obj;
                                            }
                                            else
                                            {

                                                Model.ExamResultApproveObj = Model.StudeltList[0].ExamResultForDisplayObj;
                                            }


                                            Model.StudeltList[z].ExamStudentSubjectMarkDetailList = dbc.GetExamStudentSubjectMarkDetailByID(Model.StudeltList[z].ExamResultForDisplayObj.ExamStudentSubjectMarkID, Model.StudeltList[z].ExamResultForDisplayObj.ExamID, Model.StudeltList[z].ExamResultForDisplayObj.ProgramCourseID, Model.StudeltList[z].ExamResultForDisplayObj.StudentID).ToList();

                                            if (Model.StudeltList[z].ExamStudentSubjectMarkDetailList.Count > 0)
                                            {
                                                if (Model.StudeltList[z].ExamStudentSubjectMarkDetailList[0].ExamStudentSubjectMarkDetailID != 0)
                                                {
                                                    for (var x = 0; x < Model.StudeltList[z].ExamStudentSubjectMarkDetailList.Count; x++)
                                                    {
                                                        if (Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].ExamStudentSubjectMarkTypeID == 1)
                                                        {
                                                            TotalAssignementMarks = TotalAssignementMarks + Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].TotalMarks;
                                                            TotalObtainAssignementMarks = TotalObtainAssignementMarks + Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].ObtainMarks;

                                                        }
                                                        else if (Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].ExamStudentSubjectMarkTypeID == 2)
                                                        {
                                                            TotalQuiztMarks = TotalQuiztMarks + Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].TotalMarks;
                                                            TotalObtainQuiztMarks = TotalObtainQuiztMarks + Model.StudeltList[z].ExamStudentSubjectMarkDetailList[x].ObtainMarks;
                                                        }

                                                    }
                                                }
                                            }
                                        }
                                        @{  OverallObtailmarks = Model.StudeltList[z].ExamResultForDisplayObj.ObtainWrittenTestMarks + @TotalObtainAssignementMarks + @TotalObtainQuiztMarks;

                                        }
                                        @Math.Round(Convert.ToDecimal(@OverallObtailmarks), 2)  / @Math.Round(Convert.ToDecimal(Model.StudeltList[z].ExamResultForDisplayObj.TotalSubjectMarks), 2)  = @{


                                            decimal? percetage = (@OverallObtailmarks / Model.StudeltList[z].ExamResultForDisplayObj.TotalSubjectMarks) * 100;


                                        }
                                        @Math.Round(Convert.ToDecimal(@percetage), 2) %
                                        @*@Html.ActionLink("Subject Marks Display", "ExamSubjectsStudentMarkDisplay", new { ExamID = Model.StudeltList[z].ExamID, ProgramCourseID = Model.StudeltList[z].ProgramCourseID, StudentID = Model.StudeltList[z].StudentID })*@

                                    </td>
                                    <td>
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].ExamResultForDisplayObj.ExamStudentSubjectMarkID)
                                        @Html.CheckBoxFor(model => Model.StudeltList[z].ExamResultForDisplayObj.IsTeacherStudentApprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px" })
                                    </td>
                                    <td>
                                        @Html.HiddenFor(modelItem => Model.StudeltList[z].ExamResultForDisplayObj.IsHodStudentApprove)
                                    @Html.CheckBoxFor(model => Model.StudeltList[z].ExamResultForDisplayObj.IsHodStudentApprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px", @disabled = "disabled" })</td>
                                </tr>

                                            }
                        </table>
                        <br />

                        <div class="row" style="margin-top:20px;padding-left:30px;padding-right:30px">
                            <div class="row" style="font-weight:bold;padding-left:10px;">
                                Note: &nbsp;&nbsp;&nbsp; *F Grade Awarded due to Short Attendance.
                            </div>
                            <div class="row" style="font-weight:bold;padding-left:10px;">
                                Note: &nbsp;&nbsp;&nbsp; $F Grade Awarded due to Cheating Case.
                            </div>


                        </div>
                            <div class="row">
                                <div class="col-sm-2" style="padding-top:10px">
                                    <label>Instructor(Signature):</label>
                                </div>
                                <div class="col-sm-3">

                                    @*@Html.EditorFor(model => Model.StudeltList[0].ExamTitle, new { htmlAttributes = new { @class = "" } })*@
                                    @Html.EditorFor(model => Model.ExamResultApproveObj.TeacherName, new { htmlAttributes = new { @class = "" } })
                                </div>
                                <div class="col-sm-1" style="padding-top:10px; text-align:left">
                                    @Html.CheckBoxFor(model => Model.ExamResultApproveObj.IsTeacherApproveOrDisapprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px" })
                                </div>
                                <div class="col-sm-1" style="padding-top:10px">
                                    <label>Date:</label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => Model.ExamResultApproveObj.TeacherApproveOrDisapproveDate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                                </div>

                            </div>




                            <div class="row">
                                <div class="col-sm-2" style="padding-top:10px">
                                    <label>Hod(Signature):</label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => Model.ExamResultApproveObj.HodName, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                                </div>
                                <div class="col-sm-1" style="padding-top:10px; text-align:left">
                                    @Html.HiddenFor(modelItem => Model.ExamResultApproveObj.IsHodApproveOrDisapprove)
                                    @Html.CheckBoxFor(model => Model.ExamResultApproveObj.IsHodApproveOrDisapprove, new { @class = "checkbox-inline", @style = "width:18px;height:18px", @disabled = "disabled" })
                                </div>
                                <div class="col-sm-1" style="padding-top:10px">
                                    <label>Date:</label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => Model.ExamResultApproveObj.HodApproveOrDisapproveDate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                                </div>

                            </div>




                                                }

                                            }
            </td>

        </tr>

    </table>

    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-7"></div>
        <div class="col-sm-1">
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    </div>

                                            }

@section Scripts {
    <script>
        $(document).ready(function () {

        });



    </script>
    <style>
        input[type=text] {
            width: 100%;
            background-color: lightyellow;
            border: 0;
            border-bottom: 1px solid lightgrey;
            padding: 3px;
        }

        input[type=datetime] {
            width: 100%;
            background-color: lightyellow;
            border: 0;
            border-bottom: 1px solid lightgrey;
            padding: 3px;
        }


        input[type=textarea] {
            width: 100%;
            background-color: lightyellow;
            border: 0;
            border-bottom: 1px solid lightgrey;
            padding: 3px;
        }

        .notes {
            background-image: -webkit-linear-gradient(left, lightyellow 10px, transparent 10px), -webkit-linear-gradient(right, lightyellow 10px, transparent 10px), -webkit-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
            background-image: -moz-linear-gradient(left, lightyellow 10px, transparent 10px), -moz-linear-gradient(right, lightyellow 10px, transparent 10px), -moz-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
            background-image: -ms-linear-gradient(left, lightyellow 10px, transparent 10px), -ms-linear-gradient(right, lightyellow 10px, transparent 10px), -ms-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
            background-image: -o-linear-gradient(left, lightyellow 10px, transparent 10px), -o-linear-gradient(right, lightyellow 10px, transparent 10px), -o-linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
            background-image: linear-gradient(left, lightyellow 10px, transparent 10px), linear-gradient(right, lightyellow 10px, transparent 10px), linear-gradient(lightyellow 30px, #ccc 30px, #ccc 31px, lightyellow 31px);
            background-size: 100% 100%, 100% 100%, 100% 31px;
            background-color: lightyellow;
            border: none;
            border-bottom: 1px solid lightgrey;
            line-height: 31px;
            font-family: Arial, Helvetica, Sans-serif;
            padding: 8px;
        }

            .notes:focus {
                outline: none;
            }

        body {
            background-color: #eee;
        }
    </style>



}





