@model CampusManagement.Models.ExamEligibleStudentsForAdminViewModel
@using CampusManagement.Models

@using (Html.BeginForm("IndexLoad", "ExamEligibleStudentForAdmin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <h2><span class="col-sm-12"> Eligible Student For Exam </span></h2>
    </div>
    <hr style="border-top: 1px solid #6d9b90;" />
    @Html.Partial("_MessageView")

    <div class="row">
        <div class="col-sm-4">
            <label>Exam</label>
            @Html.DropDownListFor(model => model.ExamID, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })

        </div>
        <div class="col-sm-4">
            <label>Session</label>
            @Html.DropDownListFor(model => model.BatchID, null, "--ALL--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchID, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-4">
            <label>Program</label>
            @Html.DropDownListFor(model => model.BatchProgramID, null, htmlAttributes: new { @class = "form-control" })
            @*@Html.DropDownList("BatchProgramID", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.BatchProgramID, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-4">
            <label>Semester #</label>
            @Html.DropDownListFor(model => model.YearSemesterNo, null, htmlAttributes: new { @class = "form-control" })
            @*@Html.DropDownList("YearSemesterNo", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.YearSemesterNo, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-4">
            <label>Subjects #</label>
            @Html.DropDownListFor(model => model.ProgramCourseID, null, htmlAttributes: new { @class = "form-control" })
            @*@Html.DropDownList("ProgramCourseID", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.ProgramCourseID, "", new { @class = "text-danger" })
        </div>


    </div>

    <div class="row" style="margin-top: 1em;">
        <div class="col-sm-3">
            <button type="submit" class="btn btn-primary" value="Search">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </div>

    </div>

}
@{
    ModelCMSNewContainer dbc = new ModelCMSNewContainer();
    Model.StudentList = dbc.GetExamEligibleStudentsForAdmin(Model.ExamID, Model.BatchID, Model.BatchProgramID, Model.YearSemesterNo, Model.ProgramCourseID).ToList();
}
@*@using (Html.BeginForm("CreateExamEligibleStudents", "ExamEligibleStudentForAdmin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    if (Model.StudentList.Count > 0)
    {
        int StudentID = 0; <br />
        <table class="table" id="tblEligiblestudents" name="tblEligiblestudents">
            <tr>
                <th>
                    Student Detail
                </th>
            </tr>


            @for (var i = 0; i < Model.StudentList.Count; i++)
            {
                string TDEligibleID = "DivEligibleID_" + @Model.StudentList[i].StudentBatchProgramCourseID;

                <tr>
                    <td>
                        @{
                            if (StudentID != Model.StudentList[i].StudentID)
                            {
                                <table>
                                    <tr>
                                        @Html.HiddenFor(modelItem => Model.StudentList[i].StudentBatchProgramCourseID)
                                        @Html.HiddenFor(modelItem => Model.StudentList[i].ExamsDateSheetDetailID)

                                        

                                        <td><label class="control-label">Name:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].StudentName)</td>
                                        <td><label class="control-label">&nbsp;Cell #:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].CellNo)</td>
                                        <td><label class="control-label">&nbsp;Email:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].Email)</td>
                                    </tr>
                                    <tr>
                                        <td><label class="control-label">Session:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].BatchSession)</td>
                                        <td><label class="control-label">&nbsp;Program:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].ProgramName)</td>
                                        <td><label class="control-label">&nbsp;Semester #:&nbsp;</label>@Html.DisplayFor(modelItem => Model.StudentList[i].YearSemesterNo)</td>
                                    </tr>
                                </table>
                                StudentID = Model.StudentList[i].StudentID;
                            }
                        }
                    </td>



                </tr>
                            }
        </table>

        <div class="row col-lg-1 pull-right">

            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
                                }

                            }*@

@section Scripts {
    <script>
        $(document).ready(function () {
            GetPrograms_by_FacultyLevelBatch();
            $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
            GetBatchProgramSemesterList();
            $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);

            $("#BatchID").change(function () {
                GetPrograms_by_FacultyLevelBatch();
                $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
                GetBatchProgramSemesterList();
                $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);
                GetBatchProgramCourseList();
            });

            $("#BatchProgramID").change(function () {
                GetBatchProgramSemesterList();
                $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);
                GetBatchProgramCourseList();
            });

            $("#YearSemesterNo").change(function () {
                $("#BatchID").val(@ViewBag.hdnBatchProgramID);
                $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID);
                $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo);
                GetBatchProgramCourseList();
            });
        });

        function GetPrograms_by_FacultyLevelBatch() {
            var BatchID = $("#BatchID").val();
            $.ajax({
                url: "@Url.Content("~/ExamEligibleStudentForAdmin/GetPrograms_by_FacultyLevelBatch")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchID: +BatchID }),
                success: function (result) {
                    $("#BatchProgramID").html("");
                    //  $("#BatchProgramID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#BatchProgramID").append($('<option></option>').val(sem.BatchProgramID).html(sem.ProgramName));
                    });
                    $("#BatchProgramID").val(@ViewBag.hdnBatchProgramID)
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetBatchProgramSemesterList() {
            var BatchProgramID = $("#BatchProgramID").val();
            $.ajax({
                url: "@Url.Content("~/ExamEligibleStudentForAdmin/GetBatchProgramSemesterList")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchProgramID: +BatchProgramID }),
                success: function (result) {
                    $("#YearSemesterNo").html("");
                    $("#YearSemesterNo").append($('<option></option>').val("0").html("--ALL--"));
                    $.each($.parseJSON(result), function (i, sem) {
                        $("#YearSemesterNo").append($('<option></option>').val(sem.YearSemesterNo).html(sem.YearSemesterNo));
                    });
                    $("#YearSemesterNo").val(@ViewBag.hdnYearSemesterNo)
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }

        function GetBatchProgramCourseList() {
            var BatchID = $("#BatchID").val();
            var BatchProgramID = $("#BatchProgramID").val();
            var YearSemesterNo = $("#YearSemesterNo").val();
            $.ajax({
                url: "@Url.Content("~/ExamEligibleStudentForAdmin/GetBatchProgramCourseList")",
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ BatchID: +BatchID, BatchProgramID: +BatchProgramID, YearSemesterNo: +YearSemesterNo }),
                success: function (result) {
                    $("#ProgramCourseID").html("");
                    // $("#ProgramCourseID").append($('<option></option>').val("0").html("--Please Select--"));
                    $.each($.parseJSON(result), function (i, pro) {
                        $("#ProgramCourseID").append($('<option></option>').val(pro.ProgramCourseID).html(pro.CourseName));
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                },
            });
        }
    </script>
}
